source base_src
{
    type            = pgsql
    sql_host        = localhost
    sql_user        = findinshop
    sql_pass        = fargo
    sql_db          = findinshop
    # sql_db          = findinshop_db_1_8
}

source product_src : base_src
{

#sql_query_range= SELECT MIN(id),MAX(id) FROM documents
    # sql_query_range = SELECT MIN(price), MAX(price) from product_product
    # sql_range_step = 10000
    #AND product.price >= $start AND product.price <=$end

    sql_query_pre   = SET client_encoding="UTF8";

    sql_query = SELECT product.id, product.name,  product.description, product.vendor_id, \
                    product.color, product.price, product.site_id,  \
                    product.category_id, product.delivery, product.store, \
                    product.pickup, product.one_c, product.click_cost, product.gender,\
                    product.image_url, product.currency, "catalog_category".name as category_name,\
                    "website_website".type as site_type,\
                    catalog_item_point.point_id as point_ids\
                    FROM catalog_item as product \
                    LEFT JOIN "catalog_category" \
                        ON product.category_id = "catalog_category".id \
                    LEFT JOIN "website_website" \
                        ON product.site_id = "website_website".id \
                    LEFT JOIN "catalog_item_point" \
                        ON product.id = "catalog_item_point".item_id \
                    WHERE price > 0.01 AND image_url != 'no_image.png';

# post-index-query, executed on successful indexing completion
    # optional, default is empty
    # $maxid expands to max document ID actually fetched from DB
    #
    # sql_query_post_index  = REPLACE INTO counters ( id, val ) \
    #   VALUES ( 'max_indexed_id', $maxid )

    # sql_attr_uint = id
    sql_attr_uint = site_id
    sql_attr_uint = category_id

    sql_attr_multi = uint point_ids from field
    sql_attr_uint = vendor_id
    sql_attr_uint = site_type
    sql_attr_float = price
    sql_attr_float = click_cost

    sql_attr_bool = delivery
    sql_attr_bool = store
    sql_attr_bool = pickup
    sql_attr_bool = one_c

    sql_attr_uint = color
    sql_attr_uint = gender
    sql_field_string = name
    sql_field_string = description
    sql_field_string = image_url
    sql_field_string = currency
    sql_field_string = category_name
}

# source src1
# {
#     type            = mysql
#     sql_host        = localhost
#     sql_db          = index_rt
#     sql_query   = TRUNCATE RTINDEX item_rt;
# }

index product
{
    source          = product_src
    path            = var/data/product
    morphology      = stem_enru

    min_word_len    = 1
    #charset_type        = utf-8
    html_strip          = 1
    html_remove_elements = script
    docinfo         = extern
    wordforms         = var/data/wordforms.txt

    dict = keywords


#    charset_table = 0..9, A..Z->a..z, _, a..z, \
#    U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435, U+0028, U+0029, U+002F, \
#    U+005B, U+005C, U+005D,
}

# TRUNCATE RTINDEX item_rt;
index item_rt
{
    type = rt
    path = var/data/item_rt
    # rt_field   = content

    rt_attr_uint = site_id
    rt_attr_uint = category_id
    rt_attr_multi = point_ids
    rt_attr_uint = vendor_id
    rt_attr_uint = site_type
    rt_attr_float = price
    rt_attr_float = click_cost

    rt_attr_bool = delivery
    rt_attr_bool = store
    rt_attr_bool = pickup
    rt_attr_bool = one_c

    rt_field = name
    rt_attr_uint = color
    rt_attr_uint = gender
    rt_field = description
    rt_field = image_url
    rt_field = currency
    rt_field = category_name
}

indexer
{
    mem_limit       = 64M
}

searchd
{
    
    listen          = 9312
    listen          = 9306:mysql41
    log         = var/log/searchd.log
    query_log       = var/log/query.log
    read_timeout        = 5
    max_children        = 30
    pid_file        = var/log/searchd.pid
    #max_matches     = 10000
    seamless_rotate     = 1
    preopen_indexes     = 1
    unlink_old      = 1
    workers         = threads # for RT to work
    binlog_path     = var/data
}

